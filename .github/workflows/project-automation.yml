name: Project Board Automation

on:
  issues:
    types: [opened, reopened]
  pull_request:
    types: [opened, ready_for_review, closed]
  workflow_run:
    workflows: ["CI"]
    types: [completed]

jobs:
  # Move issue to Backlog when created
  add-to-backlog:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && (github.event.action == 'opened' || github.event.action == 'reopened')
    steps:
      - name: Add issue to project
        run: |
          echo "Issue #${{ github.event.issue.number }} created - should be added to Backlog column"
          # Note: Requires GitHub Projects (beta) API integration
          # See: https://docs.github.com/en/issues/planning-and-tracking-with-projects/automating-your-project/automating-projects-using-actions

  # Move to In Progress when PR is opened
  move-to-in-progress:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    steps:
      - name: Check for linked issue
        id: check_issue
        run: |
          echo "PR #${{ github.event.pull_request.number }} opened"
          # Extract issue number from PR body or title
          ISSUE_NUM=$(echo "${{ github.event.pull_request.body }}" | grep -oP 'Closes #\K\d+' || echo "")
          echo "issue_number=$ISSUE_NUM" >> $GITHUB_OUTPUT
          
      - name: Move to In Progress
        if: steps.check_issue.outputs.issue_number != ''
        run: |
          echo "Moving issue #${{ steps.check_issue.outputs.issue_number }} to In Progress"
          # Note: Requires GitHub Projects (beta) API integration

  # Move to In Review when PR is ready for review
  move-to-in-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'ready_for_review'
    steps:
      - name: Check for linked issue
        id: check_issue
        run: |
          echo "PR #${{ github.event.pull_request.number }} ready for review"
          ISSUE_NUM=$(echo "${{ github.event.pull_request.body }}" | grep -oP 'Closes #\K\d+' || echo "")
          echo "issue_number=$ISSUE_NUM" >> $GITHUB_OUTPUT
          
      - name: Move to In Review
        if: steps.check_issue.outputs.issue_number != ''
        run: |
          echo "Moving issue #${{ steps.check_issue.outputs.issue_number }} to In Review"
          # Note: Requires GitHub Projects (beta) API integration

  # Move to Done when PR is merged
  move-to-done:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    steps:
      - name: Check for linked issue
        id: check_issue
        run: |
          echo "PR #${{ github.event.pull_request.number }} merged"
          ISSUE_NUM=$(echo "${{ github.event.pull_request.body }}" | grep -oP 'Closes #\K\d+' || echo "")
          echo "issue_number=$ISSUE_NUM" >> $GITHUB_OUTPUT
          
      - name: Move to Done
        if: steps.check_issue.outputs.issue_number != ''
        run: |
          echo "Moving issue #${{ steps.check_issue.outputs.issue_number }} to Done"
          # Note: Requires GitHub Projects (beta) API integration

  # Comment on PR and move back to In Progress when CI fails
  handle-ci-failure:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'failure'
    steps:
      - name: Get PR number
        id: get_pr
        run: |
          PR_NUM="${{ github.event.workflow_run.pull_requests[0].number }}"
          echo "pr_number=$PR_NUM" >> $GITHUB_OUTPUT
          
      - name: Comment on PR
        if: steps.get_pr.outputs.pr_number != ''
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ steps.get_pr.outputs.pr_number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '⚠️ CI has failed for this PR. Please review the logs and fix the issues before requesting review again.'
            })
            
      - name: Move to In Progress
        if: steps.get_pr.outputs.pr_number != ''
        run: |
          echo "Moving PR #${{ steps.get_pr.outputs.pr_number }} back to In Progress due to CI failure"
          # Note: Requires GitHub Projects (beta) API integration
